function receiveControlConstants(){"use strict";$.post("socketmessage.php",{messageType:"getControlConstants",message:""},function(e){window.controlConstants=e;for(var t in window.controlConstants){if(window.controlConstants.hasOwnProperty(t)){if($('select[name="'+t+'"]').length){$('select[name="'+t+'"]').val(window.controlConstants[t])}if($('input[name="'+t+'"]').length){$('input[name="'+t+'"]').val(window.controlConstants[t])}$(".cc."+t+" .val").text(window.controlConstants[t])}}},"json")}function receiveControlSettings(e){"use strict";$.post("socketmessage.php",{messageType:"getControlSettings",message:""},function(t){window.controlSettings=t;for(var n in controlSettings){if(controlSettings.hasOwnProperty(n)){if($('select[name="'+n+'"]').length){$('select[name="'+n+'"]').val(window.controlSettings[n])}if($('input[name="'+n+'"]').length){$('input[name="'+n+'"]').val(window.controlSettings[n])}$(".cs."+n+" .val").text(window.controlSettings[n])}}if(typeof controlSettings.dataLogging!=="undefined"){var r=$("span.data-logging-state");if(controlSettings.dataLogging==="paused"){r.text("(logging paused)");r.show()}else if(controlSettings.dataLogging==="stopped"){r.text("(logging stopped)");r.show()}else{r.hide()}}if(e&&typeof e==="function"){e()}},"json")}function receiveControlVariables(){"use strict";$.post("socketmessage.php",{messageType:"getControlVariables",message:""},function(e){window.controlVariables=e;for(var t in window.controlVariables){if(window.controlVariables.hasOwnProperty(t)){$(".cv."+t+" .val").text(window.controlVariables[t])}}$(".cv.pid-result .val").text(Math.round(1e3*(window.controlVariables.p+window.controlVariables.i+window.controlVariables.d))/1e3)},"json")}function loadDefaultControlSettings(){"use strict";$.post("socketmessage.php",{messageType:"loadDefaultControlSettings",message:""},function(){receiveControlSettings()})}function loadDefaultControlConstants(){"use strict";$.post("socketmessage.php",{messageType:"loadDefaultControlConstants",message:""},function(){receiveControlConstants()})}function reloadControlConstantsFromArduino(){"use strict";$.post("socketmessage.php",{messageType:"refreshControlConstants",message:""},function(){receiveControlConstants()})}function reloadControlSettingsFromArduino(){"use strict";$.post("socketmessage.php",{messageType:"refreshControlSettings",message:""},function(){receiveControlSettings()})}function reloadControlVariablesFromArduino(){"use strict";$.post("socketmessage.php",{messageType:"refreshControlVariables",message:""},function(){receiveControlVariables()})}function stopScript(){"use strict";$.post("socketmessage.php",{messageType:"stopScript",message:""},function(){})}function startScript(){"use strict";$.get("start_script.php")}function refreshLcd(){"use strict";$.post("socketmessage.php",{messageType:"lcd",message:""},function(e){var t=$("#lcd .lcd-text");for(var n=e.length-1;n>=0;n--){t.find("#lcd-line-"+n).html(e[n])}updateScriptStatus(true)},"json").fail(function(){var e=$("#lcd .lcd-text");e.find("#lcd-line-0").html("Cannot receive");e.find("#lcd-line-1").html("LCD text from");e.find("#lcd-line-2").html("Python script");e.find("#lcd-line-3").html(" ");updateScriptStatus(false)}).always(function(){window.setTimeout(refreshLcd,5e3)})}function updateScriptStatus(e){"use strict";if(window.scriptStatus==e){return}window.scriptStatus=e;var t=$(".script-status");var n=t.find("span.ui-icon");var r=t.find("span.ui-button-text");if(e){n.removeClass("ui-icon-alert").addClass("ui-icon-check");t.removeClass("ui-state-error").addClass("ui-state-default");r.text("Script running");t.unbind();t.bind({click:function(){stopScript()},mouseenter:function(){n.removeClass("ui-icon-check").addClass("ui-icon-stop");t.removeClass("ui-state-default").addClass("ui-state-error");r.text("Stop script")},mouseleave:function(){n.removeClass("ui-icon-stop").addClass("ui-icon-check");t.removeClass("ui-state-error").addClass("ui-state-default");r.text("Script running")}})}else{n.removeClass("ui-icon-check").addClass("ui-icon-alert");t.removeClass("ui-state-default").addClass("ui-state-error");r.text("Script not running!");t.unbind();t.bind({click:function(){startScript()},mouseenter:function(){n.removeClass("ui-icon-alert").addClass("ui-icon-play");t.removeClass("ui-state-error").addClass("ui-state-default");r.text("Start script")},mouseleave:function(){n.removeClass("ui-icon-play").addClass("ui-icon-alert");t.removeClass("ui-state-default").addClass("ui-state-error");r.text("Script not running!")}})}}function beerNameDialogInit(){"use strict";var e=$("<div class='beer-name-dialog'></div>").dialog({modal:true,title:"Switch active brew",width:480});var t=$("<button class='back' title='Go back'></button>").button({icons:{primary:"ui-icon-arrowthick-1-w"},text:false});e.append(t);var n=$("<div class='dialog-body'></div>");e.append(n);beerNameDialogStart(n,t)}function beerNameDialogStart(e,t){"use strict";e.empty();t.hide();var n=$("#beer-name").text();var r="";var i=true;var s=true;var o=true;var u="undefined";if(typeof window.controlSettings.dataLogging!=="undefined"){u=window.controlSettings.dataLogging}if(u==="stopped"){r+="You are currently not logging data.";i=false;s=false;o=false}else if(u==="paused"){r+="You have temporarily disabled data logging for the brew '"+n+"'.";s=false}else if(u==="active"){r+="You are currently logging data for the brew '"+n+"'.";o=false}else{r+="You are logging data for brew '"+n+"'."}e.append($("<span  class='dialog-intro'>"+r+"<br>What would you like to do?</span>"));var a=$("<div class='beer-name-buttons'></div>");a.append($("<button>Start new brew</button>").button({icons:{primary:"ui-icon-plus"}}).click(function(){beerNameDialogNew(e,t)}));if(i){a.append($("<button>Stop this brew</button>").button({icons:{primary:"ui-icon-stop"}}).click(function(){beerNameDialogStop(e,t)}))}if(s){a.append($("<button>Pause logging</button>").button({icons:{primary:"ui-icon-pause"}}).click(function(){beerNameDialogPause(e,t)}))}if(o){a.append($("<button>Continue logging</button>").button({icons:{primary:"ui-icon-play"}}).click(function(){beerNameDialogResume(e,t)}))}e.append(a)}function beerNameDialogNew(e,t){"use strict";e.empty();e.append($("<span  class='dialog-intro'>Please enter a name for your new brew. Your current brew will be stopped and BrewPi will start logging data for your new brew.</span>"));e.append($("<input id='new-beer-name' type='text' size='30' placeholder='Enter new beer name..'> </input>"));var n=$("<div class='beer-name-buttons'></div>");n.append($("<button>Start new brew</button>").button({icons:{primary:"ui-icon-check"}}).click(function(){$.post("socketmessage.php",{messageType:"startNewBrew",message:encodeURIComponent($("input#new-beer-name").val())},function(n){t.show().unbind().bind({click:function(){beerNameDialogNew(e,t)}});beerNameDialogResult(e,t,n)})}));e.append(n);t.show().unbind().bind({click:function(){beerNameDialogStart(e,t)}})}function beerNameDialogStop(e,t){"use strict";e.empty();e.append($("<span  class='dialog-intro'>Clicking stop will finish your current brew and will stop logging data. You can use this when you are between brews.</span>"));var n=$("<div class='beer-name-buttons'></div>");n.append($("<button>Stop this brew</button>").button({icons:{primary:"ui-icon-stop"}}).click(function(){$.post("socketmessage.php",{messageType:"stopLogging",message:""},function(n){t.show().unbind().bind({click:function(){beerNameDialogStop(e,t)}});receiveControlSettings();beerNameDialogResult(e,t,n)})}));t.show().unbind().bind({click:function(){beerNameDialogStart(e,t)}});e.append(n)}function beerNameDialogPause(e,t){"use strict";e.empty();e.append($("<span  class='dialog-intro'>Clicking the button below will temporarily disable data logging for this brew. You can later continue logging data for the same brew.</span>"));var n=$("<div class='beer-name-buttons'></div>");n.append($("<button>Pause logging temporarily</button>").button({icons:{primary:"ui-icon-pause"}}).click(function(){$.post("socketmessage.php",{messageType:"pauseLogging",message:""},function(n){t.show().unbind().bind({click:function(){beerNameDialogPause(e,t)}});receiveControlSettings();beerNameDialogResult(e,t,n)})}));t.show().unbind().bind({click:function(){beerNameDialogStart(e,t)}});e.append(n)}function beerNameDialogResume(e,t){"use strict";e.empty();e.append($("<span  class='dialog-intro'>Clicking the button below will resume logging for your currently active brew.</span>"));var n=$("<div class='beer-name-buttons'></div>");n.append($("<button>Resume logging for current brew</button>").button({icons:{primary:"ui-icon-pause"}}).click(function(){$.post("socketmessage.php",{messageType:"resumeLogging",message:""},function(n){t.show().unbind().bind({click:function(){beerNameDialogResume(e,t)}});receiveControlSettings();beerNameDialogResult(e,t,n)})}));t.show().unbind().bind({click:function(){beerNameDialogStart(e,t)}});e.append(n)}function beerNameDialogResult(e,t,n){"use strict";e.empty();if(n===""){n={status:2,statusMessage:"Could not receive reply from script"}}else{n=$.parseJSON(n)}if(n.status===0){e.append($("<span  class='dialog-result-success'>Success!</span>"))}else{e.append($("<span  class='dialog-result-error'>Error:</span>"))}e.append($("<span  class='dialog-result-message'>"+n.statusMessage+"</span>"))}var prevScriptStatus=-1;var controlConstants={};var controlSettings={};var controlVariables={};$(document).ready(function(){"use strict";$(".script-status").button({icons:{primary:"ui-icon-alert"}});$(".script-status span.ui-button-text").text("Checking script..");$("#beer-name").click(beerNameDialogInit);loadControlPanel();drawBeerChart(window.beerName,"curr-beer-chart");receiveControlConstants();receiveControlSettings();receiveControlVariables();refreshLcd()})