function initDeviceConfiguration(){"use strict";$(".refresh-device-list").button({icons:{primary:"ui-icon-refresh"}}).click(refreshDeviceList)}function getDeviceList(){"use strict";$.ajax({type:"POST",url:"socketmessage.php",data:{messageType:"getDeviceList",message:""},success:function(e){e=e.replace(/\s/g,"");var t;var n=$(".device-list");var r=$("#device-console").find("span");if(e.localeCompare("device-list-not-up-to-date")!==0){r.find("span").append("<br>Updated device list received<br>");var i=false;try{t=JSON.parse(e);deviceList=t.deviceList;pinList=t.pinList;i=true}catch(s){$("#device-console").find("span").append("Error while receiving device configuration: "+s+"<br>")}if(i){n.empty();n.append("<span class='device-list-header'>Installed devices</span>");if(deviceList.installed.length===0){r.append("No installed devices found<br>");n.append("<span class='device-list-empty-text'>None</span>")}else{r.append("Parsing installed devices<br>");console.log("Parsing installed devices: "+parseDeviceList(deviceList.installed,pinList))}n.append("<span class='device-list-header'>Detected devices</span>");if(deviceList.available.length===0){r.append("No available devices found<br>");$(".device-list").append("<span class='device-list-empty-text'>No additional devices found</span>")}else{r.append("Parsing available devices<br>");console.log("Parsing available devices: "+parseDeviceList(deviceList.available,pinList))}if($("button.add-new-device").length<1){$(".device-list-container").append("<button class='add-new-device'>Add new device</button>");$("button.add-new-device").button({icons:{primary:"ui-icon-refresh"}}).click(addNewDevice)}r.append("Device list updated for Arduino "+t.board+" with a "+t.shield+" shield<br>")}deviceListTimeoutCounter=0;if(deviceListTimeout){clearTimeout(deviceListTimeout)}if(deviceListSpinner!==undefined){deviceListSpinner.stop()}}else{if(deviceListTimeoutCounter>0){deviceListTimeoutCounter--;deviceListTimeout=setTimeout(getDeviceList,deviceListRequestTime)}}var o=document.getElementById("device-console");o.scrollTop=o.scrollHeight},async:true})}function refreshDeviceList(){"use strict";if(deviceListTimeout){clearTimeout(deviceListTimeout)}if(deviceListSpinner!==undefined){deviceListSpinner.stop()}var e="";if($("#read-values").is(":checked")){e="readValues"}var t={};deviceListSpinner=(new Spinner(t)).spin();$(".device-list-container .spinner-position").append(deviceListSpinner.el);$.post("socketmessage.php",{messageType:"refreshDeviceList",message:e});deviceListTimeoutCounter=deviceListMaxRequests;deviceListTimeout=setTimeout(getDeviceList,deviceListRequestTime)}function addNewDevice(){"use strict";var e={c:0,b:0,d:0,f:0,i:-1,h:1,p:-1,t:0,x:0,nr:$("div.device-list div.device-container").length};addDeviceToDeviceList(e,pinList,true);console.log(deviceList)}function parseDeviceList(e,t){"use strict";var n="";var r=$("div.device-list div.device-container").length;for(var i=0;i<e.length;i++){var s=e[i];s.nr=i+r;n+="Parsing device: ";n+=JSON.stringify(s);n+="<br>";addDeviceToDeviceList(s,t)}return n}function addDeviceToDeviceList(e,t,n){"use strict";if(typeof n==="undefined"){n=false}else{n=true}var r=$("<div class='device-container' id='device-"+e.nr.toString()+"'></div>");r.appendTo(".device-list");var i=$("<div class= device-name-and-apply></div>");i.appendTo(r);$("<span class='device-name'>Device "+e.nr.toString()+"</span>").appendTo(i);var s=$("<button class='apply'>Apply</button>");s.appendTo(i);s.button({icons:{primary:"ui-icon-check"}});s.click(function(){applyDeviceSettings(e.nr)});var o=$("<div class='device-all-settings'><div>");o.appendTo(r);if(typeof e.i!=="undefined"){o.append(generateDeviceSettingContainer("Device slot","device-slot",generateSelect(getDeviceSlotList(),e.i)))}if(typeof e.c!=="undefined"){o.append(generateDeviceSettingContainer("Assigned to","chamber",generateSelect(getDeviceChamberList(),e.c)))}if(typeof e.b!=="undefined"){o.append(generateDeviceSettingContainer("Assigned to","beer",generateSelect(getDeviceBeerList(),e.b)))}if(typeof e.h!=="undefined"){o.append(generateDeviceSettingContainer("Hardware type","hardware-type",spanFromListVal(getDeviceHwTypeList(),e.h,"hardware-type")))}if(typeof e.t!=="undefined"){o.append(generateDeviceSettingContainer("Device type","device-type",spanFromListVal(getDeviceTypeList(),e.t,"device-type")))}if(typeof e.x!=="undefined"){o.append(generateDeviceSettingContainer("Pin type","pin-type",generateSelect([{val:0,text:"not inverted"},{val:1,text:"inverted"}],e.x)))}if(typeof e.a!=="undefined"){var u=e.a;if(parseInt(u,10)===0){u="First on bus"}o.append(generateDeviceSettingContainer("OneWire Address","onewire-address","<span class='onewire-address device-setting'>"+u+"</span>"))}var a;if(n){a={val:-1,type:"free"};o.append(generateDeviceSettingContainer("Arduino Pin","arduino-pin",generateSelect(getLimitedPinList(t,["free"]))))}else{if(typeof e.p!=="undefined"){a=findPinInList(t,e.p);if(a!==-1){o.append(generateDeviceSettingContainer("Arduino Pin","arduino-pin",spanFromListVal(t,e.p,"arduino-pin")))}}else{o.append(generateDeviceSettingContainer("Arduino Pin","arduino-pin",$("<span>Unknown pin"+e.p+"</span>")))}}if(typeof e.f!=="undefined"){o.append(generateDeviceSettingContainer("Function","function",generateSelect(getLimitedFunctionList(a.type,e.h),e.f)))}if(typeof e.n!=="undefined"){o.append(generateDeviceSettingContainer("DS2413 pin","ds2413-pin",generateSelect([{val:0,text:"pin 0"},{val:1,text:"pin 1"}],e.n)))}if(typeof e.v!=="undefined"){var f=e.v;if(parseInt(e.t,10)===3){if(f===0){f="Inactive"}else if(f===1){f="Active"}}if(parseInt(f,10)===-64){f="Disconnected"}o.append(generateDeviceSettingContainer("Value","device-value","<span class='device-value device-setting'>"+f+"</span>"))}}function findPinInList(e,t){"use strict";for(var n=0;n<e.length;n++){if(e[n].val===t){return e[n]}}return-1}function pinTypeToFunctionList(e,t){"use strict";var n=[];var r=[2,3,4,7];switch(e){case"act":n=r;break;case"free":n=[1,2,3,4,7];break;case"onewire":if(t!==3)n=[5,6,9];else n=r;break;case"door":n=[1,2,3,4,7];break}return n}function functionToPinTypes(e){"use strict";var t;switch(e){case 0:t=["free","act","onewire","door"];break;case 1:t=["free","door"];break;case 2:case 3:case 4:case 7:t=["free","door","act"];break;case 5:case 6:case 9:t=["onewire"];break;default:t=[];break}return t}function getDeviceFunctionList(){"use strict";return[{val:0,text:"None"},{val:1,text:"Chamber Door"},{val:2,text:"Chamber Heater"},{val:3,text:"Chamber Cooler"},{val:4,text:"Chamber Light"},{val:5,text:"Chamber Temp"},{val:6,text:"Room Temp"},{val:7,text:"Chamber Fan"},{val:9,text:"Beer Temp"}]}function getLimitedFunctionList(e,t){"use strict";var n=getDeviceFunctionList();var r=pinTypeToFunctionList(e,t);var i=[n[0]];for(var s=0;s<n.length;s++){if(-1!==$.inArray(n[s].val,r)){i.push(n[s])}}return i}function getDeviceHwTypeList(){"use strict";return[{val:0,text:"None"},{val:1,text:"Digital Pin"},{val:2,text:"Temp Sensor"},{val:3,text:"DS2413"}]}function getDeviceTypeList(){"use strict";return[{val:0,text:"None"},{val:1,text:"Temp Sensor"},{val:2,text:"Switch Sensor"},{val:3,text:"Switch Actuator"}]}function getLimitedPinList(e,t){"use strict";var n=[{val:0,text:"Unassigned"}];for(var r=0;r<e.length;r++){if(-1!==$.inArray(e[r].type,t)){n.push({val:e[r].val,text:e[r].text.toString()})}}return n}function getDeviceSlotList(){"use strict";var e=15;var t=[{val:-1,text:"Unassigned"}];for(var n=0;n<=e;n++){t.push({val:n,text:n.toString()})}return t}function getDeviceChamberList(){"use strict";var e=1;var t=[{val:0,text:"Unassigned"}];for(var n=1;n<=e;n++){t.push({val:n,text:"Chamber "+n.toString()})}return t}function getDeviceBeerList(){"use strict";var e=1;var t=[{val:0,text:"Chamber device"}];for(var n=1;n<=e;n++){t.push({val:n,text:"Beer "+n.toString()})}return t}function generateSelect(e,t){"use strict";var n=$("<select>");$(e).each(function(){n.append($("<option>").attr("value",this.val).text(this.text))});n.val(t);return n}function spanFromListVal(e,t,n){"use strict";var r="undefined";for(var i=0;i<e.length;i++){if(e[i].val===t){r=e[i].text}}return $("<span class='"+n+" device-setting'>"+r+"</span>")}function valFromListText(e,t){"use strict";var n=-1;for(var r=0;r<e.length;r++){if(e[r].text===t){n=e[r].val}}return n}function generateDeviceSettingContainer(e,t,n){"use strict";var r=$("<div class='device-setting-container'/>");r.append("<span class='setting-name'>"+e+"</span>");r.append(n);r.addClass(t);return r}function applyDeviceSettings(e){"use strict";var t=getDeviceConfigString(e);$.post("socketmessage.php",{messageType:"applyDevice",message:t});$("#device-console").find("span").append("Device config command sent, U:"+t+"<br>")}function getDeviceConfigString(e){"use strict";var t="{";var n=$("#device-"+e.toString());t=addToConfigString(t,"i",n.find(".device-slot select").val());t=addToConfigString(t,"c",n.find(".chamber select").val());t=addToConfigString(t,"b",n.find(".beer select").val());t=addToConfigString(t,"f",n.find(".function select").val());t=addToConfigString(t,"h",valFromListText(getDeviceHwTypeList(),n.find("span.hardware-type").text()));var r=n.find("span.arduino-pin");var i=n.find(".arduino-pin select");if(r.length){t=addToConfigString(t,"p",valFromListText(pinList,r.text()))}else if(i.length){t=addToConfigString(t,"p",i.val())}t=addToConfigString(t,"x",n.find(".pin-type select").val());t=addToConfigString(t,"a",n.find("span.onewire-address").text());t=addToConfigString(t,"n",n.find(".ds2413-pin select").val());t+="}";return t}function addToConfigString(e,t,n){"use strict";if(n!==undefined&&n!==""){if(e!=="{"){e+=","}e+='"'+t+'"'+":"+'"'+n+'"'}return e}var deviceListTimeout=0;var deviceListTimeoutCounter=0;var deviceListSpinner;var deviceList={};var pinList={};var deviceListMaxRequests=20;var deviceListRequestTime=1e3;$(document).ready(function(){"use strict";initDeviceConfiguration()})